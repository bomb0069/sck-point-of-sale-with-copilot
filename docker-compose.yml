version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: sck_pos_mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: sck_pos
      MYSQL_USER: posuser
      MYSQL_PASSWORD: pospassword
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
    networks:
      - pos_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Go Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: sck_pos_backend
    environment:
      - ENVIRONMENT=development
      - DATABASE_URL=posuser:pospassword@tcp(mysql:3306)/sck_pos?charset=utf8mb4&parseTime=True&loc=Local
      - JWT_SECRET=development-secret-change-in-production
      - PORT=8080
      - FRONTEND_URL=http://localhost:3000
    ports:
      - "8080:8080"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - pos_network
    volumes:
      - ./backend:/app
    restart: unless-stopped

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development
    container_name: sck_pos_frontend
    environment:
      - REACT_APP_API_URL=http://localhost:8080/api/v1
      - CHOKIDAR_USEPOLLING=true
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - pos_network
    volumes:
      - ./frontend:/app
      - /app/node_modules
    stdin_open: true
    tty: true

volumes:
  mysql_data:
    driver: local

networks:
  pos_network:
    driver: bridge
